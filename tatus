[1mdiff --git a/src/app/application.cpp b/src/app/application.cpp[m
[1mindex 766dc9f..0cdf593 100644[m
[1m--- a/src/app/application.cpp[m
[1m+++ b/src/app/application.cpp[m
[36m@@ -408,18 +408,19 @@[m [mApplication::Init()[m
   _tools[_mainWindow] = Tool();[m
   _tools[_mainWindow].Init();[m
   [m
[31m-  GraphEditorUI* graph = new GraphEditorUI(graphView);[m
[32m+[m[32m  //GraphEditorUI* graph = new GraphEditorUI(graphView);[m
[32m+[m[41m  [m
   //CurveEditorUI* editor = new CurveEditorUI(graphView);[m
[31m-  _viewport = new ViewportUI(viewportView);[m
[32m+[m[32m  //_viewport = new ViewportUI(viewportView);[m
   _timeline = new TimelineUI(timelineView);[m
   MenuUI* menu = new MenuUI(topView);[m
[31m-  ToolbarUI* verticalToolbar = new ToolbarUI(toolView, true);[m
[32m+[m[32m  /*ToolbarUI* verticalToolbar = new ToolbarUI(toolView, true);[m
   _explorer = new ExplorerUI(explorerView);[m
   _layers =  new LayersUI(layersView);[m
   //new LayerHierarchyUI(layersView, "fuck");[m
   //_property = new PropertyUI(propertyView, "Property");[m
   new DemoUI(propertyView);[m
[31m-[m
[32m+[m[32m  */[m
   std::cout << "PREFERENCES : " << GetPreferences().GetRootFolder() << std::endl;[m
   //_stage = TestAnimXFromFile(filename, editor);[m
   //pxr::UsdStageRefPtr stage = TestAnimX(editor);[m
[1mdiff --git a/src/app/view.cpp b/src/app/view.cpp[m
[1mindex dd66445..01ecde7 100644[m
[1m--- a/src/app/view.cpp[m
[1m+++ b/src/app/view.cpp[m
[36m@@ -8,49 +8,44 @@[m
 #include "../ui/tab.h"[m
 #include "../ui/splitter.h"[m
 #include "../ui/menu.h"[m
[31m-#include "../ui/viewport.h"[m
[31m-#include "../ui/contentBrowser.h"[m
[31m-#include "../ui/graphEditor.h"[m
[31m-#include "../ui/propertyEditor.h"[m
[31m-#include "../ui/curveEditor.h"[m
[31m-#include "../ui/layerEditor.h"[m
[31m-#include "../ui/debug.h"[m
[31m-#include "../ui/demo.h"[m
 [m
 [m
 [m
 JVR_NAMESPACE_OPEN_SCOPE[m
[31m-[m
 // View constructor[m
 //----------------------------------------------------------------------------[m
[31m-View::View(View* parent, const pxr::GfVec2f& min, const pxr::GfVec2f& max)[m
[32m+[m[32mView::View(View* parent, const pxr::GfVec2f& min, const pxr::GfVec2f& max, unsigned flags)[m
   : _parent(parent)[m
   , _tab(NULL)[m
   , _left(NULL)[m
   , _right(NULL)[m
   , _min(min)[m
   , _max(max)[m
[31m-  , _flags(HORIZONTAL|LEAF|DIRTY)[m
[32m+[m[32m  , _flags(flags)[m
   , _perc(0.5)[m
   , _buffered(0)[m
   , _fixedPixels(-1)[m
[32m+[m[32m  , _current(NULL)[m
 {[m
   if(_parent!=NULL)_window = _parent->_window;[m
[32m+[m[32m  if (_flags & View::TAB)CreateTab();[m
 }[m
 [m
[31m-View::View(View* parent, int x, int y, int w, int h)[m
[32m+[m[32mView::View(View* parent, int x, int y, int w, int h, unsigned flags)[m
   : _parent(parent)[m
   , _tab(NULL)[m
   , _left(NULL)[m
   , _right(NULL)[m
   , _min(pxr::GfVec2f(x, y))[m
   , _max(pxr::GfVec2f(x+w, y+h))[m
[31m-  , _flags(HORIZONTAL|LEAF|DIRTY)[m
[32m+[m[32m  , _flags(flags)[m
   , _perc(0.5)[m
   , _buffered(0)[m
   , _fixedPixels(-1)[m
[32m+[m[32m  , _current(NULL)[m
 {[m
   if(_parent!=NULL)_window = _parent->_window;[m
[32m+[m[32m  if (_flags & View::TAB)CreateTab();[m
 }[m
 [m
 View::~View()[m
[36m@@ -80,69 +75,6 @@[m [mView::CreateTab()[m
   return _tab;[m
 }[m
 [m
[31m-void[m
[31m-View::CreateUI(UIType type)[m
[31m-{[m
[31m-  switch (type) {[m
[31m-  case UIType::VIEWPORT:[m
[31m-    new ViewportUI(this);[m
[31m-    break;[m
[31m-  case UIType::CONTENTBROWSER:[m
[31m-    new ContentBrowserUI(this);[m
[31m-    break;[m
[31m-  case UIType::GRAPHEDITOR:[m
[31m-    new GraphEditorUI(this);[m
[31m-    break;[m
[31m-  case UIType::CURVEEDITOR:[m
[31m-    new CurveEditorUI(this);[m
[31m-    break;[m
[31m-  case UIType::LAYEREDITOR:[m
[31m-    new LayerEditorUI(this);[m
[31m-    break;[m
[31m-  case UIType::DEBUG:[m
[31m-    new DebugUI(this);[m
[31m-    break;[m
[31m-  case UIType::DEMO:[m
[31m-    new DemoUI(this);[m
[31m-    break;[m
[31m-  case UIType::PROPERTYEDITOR:[m
[31m-    new PropertyUI(this);[m
[31m-    break;[m
[31m-  }[m
[31m-}[m
[31m-[m
[31m-void[m
[31m-View::AddUI(BaseUI* ui)[m
[31m-{[m
[31m-  _uis.push_back(ui);[m
[31m-}[m
[31m-[m
[31m-void[m
[31m-View::SetCurrentUI(int index)[m
[31m-{[m
[31m-  if (index >= 0 && index < _uis.size())[m
[31m-  {[m
[31m-    _uis[index]->Resize();[m
[31m-    _current = index;[m
[31m-  }[m
[31m-}[m
[31m-[m
[31m-BaseUI*[m
[31m-View::GetCurrentUI()[m
[31m-{[m
[31m-  if (0 <= _current < _uis.size()) {[m
[31m-    return _uis[_current];[m
[31m-  }[m
[31m-  return NULL;[m
[31m-}[m
[31m-[m
[31m-[m
[31m-void[m
[31m-View::TransferUIs(View* source)[m
[31m-{[m
[31m-  _uis = source->_uis;[m
[31m-  source->_uis.clear();[m
[31m-}[m
 [m
 bool[m
 View::Contains(int x, int y)[m
[36m@@ -162,6 +94,7 @@[m [mView::Intersect(const pxr::GfVec2i& min, const pxr::GfVec2i& size)[m
 bool[m
 View::DrawTab()[m
 {[m
[32m+[m[32m  std::cout << "draw tab..." << std::endl;[m
   if (_tab) return (_tab->Draw());[m
   return false;[m
 }[m
[36m@@ -176,13 +109,18 @@[m [mView::Draw(bool forceRedraw)[m
   else {[m
     if (!DrawTab()) {[m
       Time& time = GetApplication()->GetTime();[m
[31m-      BaseUI* current = GetCurrentUI();[m
[31m-      if (current && (forceRedraw || GetFlag(INTERACTING) || GetFlag(DIRTY))) {[m
[31m-        if (!current->Draw() && !IsActive() && !(GetFlag(TIMEVARYING) && time.IsPlaying())) {[m
[32m+[m[32m      std::cout << "CURRENT UI : " << _current << std::endl;[m
[32m+[m[32m      if (_current)std::cout << "FCK : " << _current->GetType() << std::endl;[m
[32m+[m[32m      if (_current && (forceRedraw || GetFlag(INTERACTING) || GetFlag(DIRTY))) {[m
[32m+[m
[32m+[m[32m        if (!_current->Draw() && !IsActive() && !(GetFlag(TIMEVARYING) && time.IsPlaying())) {[m
           SetClean();[m
         }[m
       }[m
     }[m
[32m+[m[32m    else {[m
[32m+[m[32m      std::cout << " FAIL DRAW TAB..." << std::endl;[m
[32m+[m[32m    }[m
   }[m
 }[m
 [m
[36m@@ -239,20 +177,19 @@[m [mView::MouseButton(int button, int action, int mods)[m
 {[m
   double x, y;[m
   glfwGetCursorPos(GetWindow()->GetGlfwWindow(), &x, &y);[m
[31m-  BaseUI* current = GetCurrentUI();[m
   if (_tab) {[m
     const float relativeY = y - GetY();[m
[31m-    if (relativeY > 0 && relativeY < GetHeadHeight() * 2) {[m
[32m+[m[32m    if (relativeY > 0 && relativeY < GetTabHeight() * 2) {[m
       _tab->MouseButton(button, action, mods);[m
     } else {[m
[31m-      if (current && !GetFlag(DISCARDMOUSEBUTTON)) {[m
[31m-        current->MouseButton(button, action, mods);[m
[32m+[m[32m      if (_current && !GetFlag(DISCARDMOUSEBUTTON)) {[m
[32m+[m[32m        _current->MouseButton(button, action, mods);[m
       }[m
       ClearFlag(DISCARDMOUSEBUTTON);[m
     }[m
   } else {[m
[31m-    if (current && !GetFlag(DISCARDMOUSEBUTTON)) {[m
[31m-      current->MouseButton(button, action, mods);[m
[32m+[m[32m    if (_current && !GetFlag(DISCARDMOUSEBUTTON)) {[m
[32m+[m[32m      _current->MouseButton(button, action, mods);[m
     }[m
     ClearFlag(DISCARDMOUSEBUTTON);[m
   }[m
[36m@@ -261,19 +198,18 @@[m [mView::MouseButton(int button, int action, int mods)[m
 void [m
 View::MouseMove(int x, int y)[m
 {[m
[31m-  BaseUI* current = GetCurrentUI();[m
   if (_tab) {[m
[31m-    if ((y - GetY()) < GetHeadHeight()) {[m
[31m-      if (GetFlag(View::INTERACTING) && current)current->MouseMove(x, y);[m
[32m+[m[32m    if ((y - GetY()) < GetTabHeight()) {[m
[32m+[m[32m      if (GetFlag(View::INTERACTING) && _current)_current->MouseMove(x, y);[m
       else _tab->MouseMove(x, y);[m
     } else {[m
[31m-      if (current && !GetFlag(DISCARDMOUSEMOVE))[m
[31m-        current->MouseMove(x, y);[m
[32m+[m[32m      if (_current && !GetFlag(DISCARDMOUSEMOVE))[m
[32m+[m[32m        _current->MouseMove(x, y);[m
         ClearFlag(DISCARDMOUSEMOVE);[m
     }[m
   } else {[m
[31m-    if (current && !GetFlag(DISCARDMOUSEMOVE))[m
[31m-      current->MouseMove(x, y);[m
[32m+[m[32m    if (_current && !GetFlag(DISCARDMOUSEMOVE))[m
[32m+[m[32m      _current->MouseMove(x, y);[m
     ClearFlag(DISCARDMOUSEMOVE);[m
   }[m
 }[m
[36m@@ -281,25 +217,22 @@[m [mView::MouseMove(int x, int y)[m
 void [m
 View::MouseWheel(int x, int y)[m
 {[m
[31m-  BaseUI* current = GetCurrentUI();[m
[31m-  if(current)current->MouseWheel(x, y);[m
[32m+[m[32m  if(_current)_current->MouseWheel(x, y);[m
 }[m
 [m
 void [m
 View::Keyboard(int key, int scancode, int action, int mods)[m
 {[m
[31m-  BaseUI* current = GetCurrentUI();[m
[31m-  if (current) {[m
[31m-    current->Keyboard(key, scancode, action, mods);[m
[32m+[m[32m  if (_current) {[m
[32m+[m[32m    _current->Keyboard(key, scancode, action, mods);[m
   }[m
 }[m
 [m
 void [m
 View::Input(int key)[m
 {[m
[31m-  BaseUI* current = GetCurrentUI();[m
[31m-  if (current) {[m
[31m-    current->Input(key);[m
[32m+[m[32m  if (_current) {[m
[32m+[m[32m    _current->Input(key);[m
   }[m
 }[m
 [m
[36m@@ -399,10 +332,11 @@[m [mView::Split(double perc, bool horizontal, int fixed, int numPixels)[m
   ComputeNumPixels(false);[m
   ClearFlag(LEAF);[m
 [m
[31m-  _left->TransferUIs(this);[m
[31m-  BaseUI* current = GetCurrentUI();[m
[31m-  if(current)current->SetParent(_left);[m
[31m-  _tab = NULL;[m
[32m+[m[32m  if (_tab && _left->_tab) {[m
[32m+[m[32m    _left->_tab->TransferUIs(this);[m
[32m+[m[32m    if (_current)_current->SetParent(_left);[m
[32m+[m[32m  }[m
[32m+[m[32m  if (_tab) delete _tab;[m
 }[m
 [m
 void [m
[36m@@ -441,8 +375,7 @@[m [mView::Resize(int x, int y, int w, int h, bool rationalize)[m
   }[m
   else[m
   {[m
[31m-    BaseUI* current = GetCurrentUI();[m
[31m-    if(current)current->Resize();[m
[32m+[m[32m    if(_current)_current->Resize();[m
   }[m
   if(rationalize)RescaleNumPixels(ratio);[m
   SetDirty();[m
[1mdiff --git a/src/app/view.h b/src/app/view.h[m
[1mindex f1a88a7..12b3089 100644[m
[1m--- a/src/app/view.h[m
[1m+++ b/src/app/view.h[m
[36m@@ -2,6 +2,7 @@[m
 #define JVR_APPLICATION_VIEW_H[m
 #include <pxr/usd/usd/prim.h>[m
 [m
[32m+[m[32m#include <vector>[m
 #include "../common.h"[m
 #include "../ui/splitter.h"[m
 #include "../ui/utils.h"[m
[36m@@ -29,11 +30,12 @@[m [mpublic:[m
     FORCEREDRAW         = 1 << 9,[m
     TIMEVARYING         = 1 << 10,[m
     DISCARDMOUSEBUTTON  = 1 << 11,[m
[31m-    DISCARDMOUSEMOVE    = 1 << 12[m
[32m+[m[32m    DISCARDMOUSEMOVE    = 1 << 12,[m
[32m+[m[32m    TAB                 = 1 << 13[m
   };[m
 [m
[31m-  View(View* parent, const pxr::GfVec2f& min, const pxr::GfVec2f& max);[m
[31m-  View(View* parent, int x, int y, int w, int h);[m
[32m+[m[32m  View(View* parent, const pxr::GfVec2f& min, const pxr::GfVec2f& max, unsigned flags=HORIZONTAL|DIRTY|LEAF|TAB);[m
[32m+[m[32m  View(View* parent, int x, int y, int w, int h, unsigned flags= HORIZONTAL|DIRTY|LEAF|TAB);[m
   virtual ~View();[m
   void SetWindow(Window* Window);[m
   Window* GetWindow();[m
[36m@@ -68,17 +70,15 @@[m [mpublic:[m
   inline bool HasParent(){return _parent != NULL;};[m
   void DeleteChildren();[m
 [m
[31m-  // content[m
[31m-  void CreateUI(UIType type);[m
[31m-  void AddUI(BaseUI* ui);[m
[31m-  void RemoveUI(int index);[m
[31m-  void SetCurrentUI(int index);[m
[31m-  BaseUI* GetCurrentUI();[m
[31m-  void TransferUIs(View* source);[m
[32m+[m[32m  // tab[m
   ViewTabUI* GetTab() { return _tab; };[m
   ViewTabUI* CreateTab();[m
   float GetTabHeight();[m
 [m
[32m+[m[32m  // current[m
[32m+[m[32m  BaseUI* GetCurrent() { return _current; };[m
[32m+[m[32m  void SetCurrent(BaseUI* ui) { _current = ui; };[m
[32m+[m
   // cursor[m
   void GetRelativeMousePosition(const int inX, const int inY, int& outX, int& outY);[m
   bool Contains(int x, int y);[m
[36m@@ -113,13 +113,12 @@[m [mprivate:[m
   unsigned              _numPixels[2];[m
   int                   _fixedPixels;[m
   int                   _buffered;[m
[31m-  int                   _current;[m
   ViewTabUI*            _tab;[m
   Window*               _window;[m
   View*                 _left;[m
   View*                 _right;[m
   View*                 _parent;[m
[31m-  std::vector<BaseUI*>  _uis;[m
[32m+[m[32m  BaseUI*               _current;[m
 };[m
 [m
 [m
[1mdiff --git a/src/ui/tab.cpp b/src/ui/tab.cpp[m
[1mindex 06238d6..18ff03b 100644[m
[1m--- a/src/ui/tab.cpp[m
[1m+++ b/src/ui/tab.cpp[m
[36m@@ -5,6 +5,14 @@[m
 #include "../ui/tab.h"[m
 #include "../app/view.h"[m
 #include "../app/window.h"[m
[32m+[m[32m#include "../ui/viewport.h"[m
[32m+[m[32m#include "../ui/contentBrowser.h"[m
[32m+[m[32m#include "../ui/graphEditor.h"[m
[32m+[m[32m#include "../ui/propertyEditor.h"[m
[32m+[m[32m#include "../ui/curveEditor.h"[m
[32m+[m[32m#include "../ui/layerEditor.h"[m
[32m+[m[32m#include "../ui/debug.h"[m
[32m+[m[32m#include "../ui/demo.h"[m
 [m
 [m
 JVR_NAMESPACE_OPEN_SCOPE[m
[36m@@ -26,16 +34,15 @@[m [mint ViewTabUI::ViewTabUIID = 0;[m
 ViewTabUI::ViewTabUI(View* parent)[m
   : _parent(parent)[m
   , _invade(false)[m
[32m+[m[32m  , _current(-1)[m
 {[m
   _id = ViewTabUIID++;[m
 }[m
 [m
[32m+[m
 // destructor[m
 ViewTabUI::~ViewTabUI()[m
 {[m
[31m-  for (auto& child : _childrens) {[m
[31m-    delete child;[m
[31m-  }[m
 }[m
 [m
 void ViewTabUI::SetView(View* view)[m
[36m@@ -43,20 +50,109 @@[m [mvoid ViewTabUI::SetView(View* view)[m
   _parent = view;[m
 }[m
 [m
[32m+[m[32mstd::string[m[41m [m
[32m+[m[32mViewTabUI::_ComputeName(int index, const char* suffix)[m
[32m+[m[32m{[m
[32m+[m[32m  return VIEW_TAB_NAME + std::to_string(index) + suffix;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
 void[m
[31m-ViewTabUI::RemoveChild(int index)[m
[32m+[m[32mViewTabUI::CreateUI(UIType type)[m
 {[m
[31m-  if (0 <= index < _childrens.size()) {[m
[31m-    BaseUI* child = _childrens[index];[m
[31m-    _childrens.erase(_childrens.begin() + index);[m
[31m-    delete child;[m
[32m+[m[32m  switch (type) {[m
[32m+[m[32m  case UIType::VIEWPORT:[m
[32m+[m[32m    new ViewportUI(_parent);[m
[32m+[m[32m    break;[m
[32m+[m[32m  case UIType::CONTENTBROWSER:[m
[32m+[m[32m    new ContentBrowserUI(_parent);[m
[32m+[m[32m    break;[m
[32m+[m[32m  case UIType::GRAPHEDITOR:[m
[32m+[m[32m    new GraphEditorUI(_parent);[m
[32m+[m[32m    break;[m
[32m+[m[32m  case UIType::CURVEEDITOR:[m
[32m+[m[32m    new CurveEditorUI(_parent);[m
[32m+[m[32m    break;[m
[32m+[m[32m  case UIType::LAYEREDITOR:[m
[32m+[m[32m    new LayerEditorUI(_parent);[m
[32m+[m[32m    break;[m
[32m+[m[32m  case UIType::DEBUG:[m
[32m+[m[32m    new DebugUI(_parent);[m
[32m+[m[32m    break;[m
[32m+[m[32m  case UIType::DEMO:[m
[32m+[m[32m    new DemoUI(_parent);[m
[32m+[m[32m    break;[m
[32m+[m[32m  case UIType::PROPERTYEDITOR:[m
[32m+[m[32m    new PropertyUI(_parent);[m
[32m+[m[32m    break;[m
   }[m
 }[m
 [m
[31m-std::string [m
[31m-ViewTabUI::_ComputeName(int index, const char* suffix)[m
[32m+[m[32mvoid[m
[32m+[m[32mViewTabUI::AddUI(BaseUI* ui)[m
 {[m
[31m-  return VIEW_TAB_NAME + std::to_string(index) + suffix;[m
[32m+[m[32m  _uis.push_back(ui);[m
[32m+[m[32m  _current == _uis.size() - 1;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mViewTabUI::SetCurrentUI(int index)[m
[32m+[m[32m{[m
[32m+[m[32m  if (index >= 0 && index < _uis.size())[m
[32m+[m[32m  {[m
[32m+[m[32m    _uis[index]->Resize();[m
[32m+[m[32m    _current = index;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mBaseUI*[m
[32m+[m[32mViewTabUI::GetCurrentUI()[m
[32m+[m[32m{[m
[32m+[m[32m  if (0 <= _current < _uis.size()) {[m
[32m+[m[32m    return _uis[_current];[m
[32m+[m[32m  }[m
[32m+[m[32m  return NULL;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mViewTabUI::RemoveUI(int index)[m
[32m+[m[32m{[m
[32m+[m[32m  if (0 <= index < 8) {[m
[32m+[m[32m    BaseUI* ui = _uis[index];[m
[32m+[m
[32m+[m[32m    _uis.erase(_uis.begin() + index);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mViewTabUI::RemoveUI(BaseUI* ui)[m
[32m+[m[32m{[m
[32m+[m[32m  for (size_t i = 0; i < _uis.size(); ++i) {[m
[32m+[m[32m    if (_uis[i] == ui) {[m
[32m+[m[32m      _uis.erase(_uis.begin() + i);[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mconst std::vector<BaseUI*>&[m
[32m+[m[32mViewTabUI::GetUIs() const[m
[32m+[m[32m{[m
[32m+[m[32m  return _uis;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstd::vector<BaseUI*>&[m
[32m+[m[32mViewTabUI::GetUIs()[m
[32m+[m[32m{[m
[32m+[m[32m  return _uis;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mViewTabUI::TransferUIs(View* source)[m
[32m+[m[32m{[m
[32m+[m[32m  _uis = std::move(source->GetTab()->_uis);[m
[32m+[m[32m  source->GetTab()->_uis.clear();[m
 }[m
 [m
 bool[m
[36m@@ -111,7 +207,7 @@[m [mViewTabUI::Draw()[m
       for (size_t n = UIType::VIEWPORT; n < UIType::COUNT; ++n) {[m
         ImGui::Selectable(UITypeName[n]);[m
         if (ImGui::IsItemClicked()) {[m
[31m-          CreateChild(UIType(n));[m
[32m+[m[32m          CreateUI(UIType(n));[m
           _invade = false;[m
         }[m
       }[m
[36m@@ -119,16 +215,17 @@[m [mViewTabUI::Draw()[m
     }[m
 [m
     // Submit our regular tabs[m
[31m-    for (int n = 0; n < _childrens.size(); ++n)[m
[32m+[m
[32m+[m[32m    BaseUI* current = GetCurrentUI();[m
[32m+[m[32m    for (int n = 0; n < _uis.size(); ++n)[m
     {[m
       bool open = true;[m
[31m-      const char* name = UITypeName[_childrens[n]->GetType()];[m
[32m+[m[32m      const char* name = UITypeName[_uis[n]->GetType()];[m
       if (ImGui::BeginTabItem(name, &open,[m
         ImGuiTabItemFlags_NoCloseButton | ImGuiTabItemFlags_NoCloseWithMiddleMouseButton | ImGuiTabItemFlags_NoPushId))[m
       {[m
         if (n != _current) {[m
[31m-          _current = n;[m
[31m-          SetCurrentChild(n);[m
[32m+[m[32m          SetCurrentUI(n);[m
         }[m
         [m
         ImGui::EndTabItem();[m
[36m@@ -136,9 +233,7 @@[m [mViewTabUI::Draw()[m
     }[m
 [m
     if (ImGui::TabItemButton(" x ", ImGuiTabItemFlags_Trailing | ImGuiTabItemFlags_NoTooltip)) {[m
[31m-      RemoveChild(_current);[m
[31m-      _current--;[m
[31m-      SetCurrentChild(_current);[m
[32m+[m[32m      RemoveUI(current);[m
     }[m
 [m
     ImGui::EndTabBar();[m
[36m@@ -188,6 +283,7 @@[m [mvoid ViewTabUI::MouseMove(int x, int y)[m
 {[m
 [m
 }[m
[32m+[m
 void ViewTabUI::MouseButton(int button, int action, int mods)[m
 {[m
   if (action == GLFW_RELEASE && button == GLFW_MOUSE_BUTTON_LEFT) {[m
[1mdiff --git a/src/ui/tab.h b/src/ui/tab.h[m
[1mindex 4df4103..9601c8b 100644[m
[1m--- a/src/ui/tab.h[m
[1m+++ b/src/ui/tab.h[m
[36m@@ -25,15 +25,20 @@[m [mpublic:[m
   ViewTabUI(View* parent);[m
   ~ViewTabUI();[m
 [m
[31m-  void CreateChild(UIType type);[m
[31m-  void AddChild(BaseUI* child);[m
[31m-  void RemoveChild(int index);[m
[31m-  void SetCurrentChild(int index);[m
[31m-  BaseUI* GetCurrentChild();[m
   void SetView(View* view);[m
[31m-[m
   float GetHeight() { return _height;};[m
[31m-  const std::vector<BaseUI*>& GetChildrens() const { return _childrens; };[m
[32m+[m
[32m+[m[32m  // content[m
[32m+[m[32m  void CreateUI(UIType type);[m
[32m+[m[32m  void AddUI(BaseUI* ui);[m
[32m+[m[32m  void RemoveUI(int index);[m
[32m+[m[32m  void RemoveUI(BaseUI* ui);[m
[32m+[m[32m  void SetCurrentUI(int index);[m
[32m+[m[32m  BaseUI* GetCurrentUI();[m
[32m+[m[32m  const std::vector<BaseUI*>& GetUIs() const;[m
[32m+[m[32m  std::vector<BaseUI*>& GetUIs();[m
[32m+[m[32m  void TransferUIs(View* source);[m
[32m+[m[32m  bool HasUIs() { return _uis.size() > 0; };[m
 [m
   // overrides[m
   bool Draw();[m
[36m@@ -42,12 +47,12 @@[m [mpublic:[m
 [m
 private:[m
   static std::string      _ComputeName(int index, const char* suffix="");[m
[31m-  int                     _current;[m
   View*                   _parent;[m
[31m-  std::vector<BaseUI*>    _childrens;[m
   bool                    _invade;[m
   int                     _id;[m
   float                   _height;[m
[32m+[m[32m  std::vector<BaseUI*>    _uis;[m
[32m+[m[32m  int                     _current;[m
 };[m
 [m
 JVR_NAMESPACE_CLOSE_SCOPE[m
[1mdiff --git a/src/ui/ui.cpp b/src/ui/ui.cpp[m
[1mindex d52bf1b..9f92a2a 100644[m
[1m--- a/src/ui/ui.cpp[m
[1m+++ b/src/ui/ui.cpp[m
[36m@@ -14,17 +14,20 @@[m [mBaseUI::BaseUI(View* parent, short type, bool popup)[m
   , _initialized(false)[m
   , _interacting(false)[m
 {[m
[31m-  if(_parent && !popup)[m
[31m-  {[m
[31m-    _parent->AddUI(this);[m
[31m-    _parent->SetFlag(View::LEAF);[m
[31m-  }[m
[31m-[m
   pxr::TfWeakPtr<BaseUI> me(this);[m
   //pxr::TfNotice::Register(me, &BaseUI::OnAllNotices);[m
   pxr::TfNotice::Register(me, &BaseUI::OnNewSceneNotice);[m
   pxr::TfNotice::Register(me, &BaseUI::OnSceneChangedNotice);[m
   pxr::TfNotice::Register(me, &BaseUI::OnSelectionChangedNotice);[m
[32m+[m
[32m+[m[32m  if (_parent && !popup)[m
[32m+[m[32m  {[m
[32m+[m[32m    if (_parent->GetTab()) {[m
[32m+[m[32m      _parent->GetTab()->AddUI(this);[m
[32m+[m[32m    }[m
[32m+[m[32m    _parent->SetCurrent(this);[m
[32m+[m[32m    _parent->SetFlag(View::LEAF);[m
[32m+[m[32m  }[m
 };[m
 [m
 std::string [m
